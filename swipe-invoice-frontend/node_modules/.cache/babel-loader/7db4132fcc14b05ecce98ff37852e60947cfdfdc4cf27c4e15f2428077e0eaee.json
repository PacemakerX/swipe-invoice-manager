{"ast":null,"code":"var _jsxFileName = \"/home/sparsh/project/swipe-invoice-manager/src/components/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setMessage, setExtractedData } from '../store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = e => {\n    const uploadedFile = e.target.files[0];\n    setSelectedFile(uploadedFile);\n    if (uploadedFile) {\n      dispatch(setMessage(`File \"${uploadedFile.name}\" selected.`));\n    } else {\n      dispatch(setMessage('No file selected.'));\n    }\n  };\n  const handleFileUpload = async () => {\n    if (!selectedFile) {\n      dispatch(setMessage('Please select a file first.'));\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      const response = await fetch('http://localhost:3001/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to upload file');\n      }\n      const data = await response.json();\n      dispatch(setExtractedData(data.extractedData));\n      dispatch(setMessage('File uploaded and processed successfully.'));\n    } catch (error) {\n      dispatch(setMessage(`Error: ${error.message}`));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card p-4\",\n    style: {\n      borderRadius: '15px',\n      backgroundColor: '#f8f9fa'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-center mb-3\",\n      children: \"File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary w-100\",\n      onClick: handleFileUpload,\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"8j5Cnt/5liJaLJYDi6oIVx5avqI=\", false, function () {\n  return [useDispatch];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useDispatch","setMessage","setExtractedData","jsxDEV","_jsxDEV","FileUpload","_s","dispatch","selectedFile","setSelectedFile","handleFileChange","e","uploadedFile","target","files","name","handleFileUpload","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","extractedData","error","message","className","style","borderRadius","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/sparsh/project/swipe-invoice-manager/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setMessage, setExtractedData } from '../store/actions'; \n\nconst FileUpload = () => {\n  const dispatch = useDispatch();\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileChange = (e) => {\n    const uploadedFile = e.target.files[0];\n    setSelectedFile(uploadedFile);\n    if (uploadedFile) {\n      dispatch(setMessage(`File \"${uploadedFile.name}\" selected.`));\n    } else {\n      dispatch(setMessage('No file selected.'));\n    }\n  };\n\n  const handleFileUpload = async () => {\n    if (!selectedFile) {\n      dispatch(setMessage('Please select a file first.'));\n      return;\n    }\n\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n\n      const response = await fetch('http://localhost:3001/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to upload file');\n      }\n\n      const data = await response.json();\n      dispatch(setExtractedData(data.extractedData));\n      dispatch(setMessage('File uploaded and processed successfully.'));\n    } catch (error) {\n      dispatch(setMessage(`Error: ${error.message}`));\n    }\n  };\n\n  return (\n    <div className=\"card p-4\" style={{ borderRadius: '15px', backgroundColor: '#f8f9fa' }}>\n      <h4 className=\"text-center mb-3\">File Upload</h4>\n      <div className=\"mb-3\">\n        <input\n          type=\"file\"\n          className=\"form-control\"\n          onChange={handleFileChange}\n        />\n      </div>\n      <button\n        className=\"btn btn-primary w-100\"\n        onClick={handleFileUpload}\n      >\n        Upload File\n      </button>\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,EAAEC,gBAAgB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMW,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACtCL,eAAe,CAACG,YAAY,CAAC;IAC7B,IAAIA,YAAY,EAAE;MAChBL,QAAQ,CAACN,UAAU,CAAC,SAASW,YAAY,CAACG,IAAI,aAAa,CAAC,CAAC;IAC/D,CAAC,MAAM;MACLR,QAAQ,CAACN,UAAU,CAAC,mBAAmB,CAAC,CAAC;IAC3C;EACF,CAAC;EAED,MAAMe,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAACR,YAAY,EAAE;MACjBD,QAAQ,CAACN,UAAU,CAAC,6BAA6B,CAAC,CAAC;MACnD;IACF;IAEA,IAAI;MACF,MAAMgB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,YAAY,CAAC;MAErC,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClCpB,QAAQ,CAACL,gBAAgB,CAACwB,IAAI,CAACE,aAAa,CAAC,CAAC;MAC9CrB,QAAQ,CAACN,UAAU,CAAC,2CAA2C,CAAC,CAAC;IACnE,CAAC,CAAC,OAAO4B,KAAK,EAAE;MACdtB,QAAQ,CAACN,UAAU,CAAC,UAAU4B,KAAK,CAACC,OAAO,EAAE,CAAC,CAAC;IACjD;EACF,CAAC;EAED,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,UAAU;IAACC,KAAK,EAAE;MAAEC,YAAY,EAAE,MAAM;MAAEC,eAAe,EAAE;IAAU,CAAE;IAAAC,QAAA,gBACpF/B,OAAA;MAAI2B,SAAS,EAAC,kBAAkB;MAAAI,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDnC,OAAA;MAAK2B,SAAS,EAAC,MAAM;MAAAI,QAAA,eACnB/B,OAAA;QACEoC,IAAI,EAAC,MAAM;QACXT,SAAS,EAAC,cAAc;QACxBU,QAAQ,EAAE/B;MAAiB;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnC,OAAA;MACE2B,SAAS,EAAC,uBAAuB;MACjCW,OAAO,EAAE1B,gBAAiB;MAAAmB,QAAA,EAC3B;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACjC,EAAA,CA3DID,UAAU;EAAA,QACGL,WAAW;AAAA;AAAA2C,EAAA,GADxBtC,UAAU;AA6DhB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}