{"ast":null,"code":"var _jsxFileName = \"/home/sparsh/project/swipe-invoice-manager/src/components/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setMessage, setExtractedData } from '../store/actions'; // Ensure the correct path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const dispatch = useDispatch();\n  const handleFileChange = async e => {\n    const uploadedFile = e.target.files[0];\n    if (uploadedFile) {\n      dispatch(setMessage(`File \"${uploadedFile.name}\" selected.`));\n      try {\n        const formData = new FormData();\n        formData.append('file', uploadedFile);\n        const response = await fetch('http://localhost:3001/upload', {\n          method: 'POST',\n          body: formData\n        });\n        if (!response.ok) {\n          throw new Error('Failed to upload file');\n        }\n        const data = await response.json();\n        dispatch(setExtractedData(data.extractedData)); // Display extracted data\n        dispatch(setMessage('File uploaded and processed successfully.'));\n      } catch (error) {\n        dispatch(setMessage(`Error: ${error.message}`));\n      }\n    } else {\n      dispatch(setMessage('No file selected.'));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card p-4\",\n    style: {\n      borderRadius: '15px',\n      backgroundColor: '#f8f9fa'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-center mb-3\",\n      children: \"File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useDispatch","setMessage","setExtractedData","jsxDEV","_jsxDEV","FileUpload","_s","dispatch","handleFileChange","e","uploadedFile","target","files","name","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","extractedData","error","message","className","style","borderRadius","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["/home/sparsh/project/swipe-invoice-manager/src/components/FileUpload.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setMessage, setExtractedData } from '../store/actions'; // Ensure the correct path\n\nconst FileUpload = () => {\n  const dispatch = useDispatch();\n\n  const handleFileChange = async (e) => {\n    const uploadedFile = e.target.files[0];\n\n    if (uploadedFile) {\n      dispatch(setMessage(`File \"${uploadedFile.name}\" selected.`));\n\n      try {\n        const formData = new FormData();\n        formData.append('file', uploadedFile);\n\n        const response = await fetch('http://localhost:3001/upload', {\n          method: 'POST',\n          body: formData,\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to upload file');\n        }\n\n        const data = await response.json();\n        dispatch(setExtractedData(data.extractedData)); // Display extracted data\n        dispatch(setMessage('File uploaded and processed successfully.'));\n      } catch (error) {\n        dispatch(setMessage(`Error: ${error.message}`));\n      }\n    } else {\n      dispatch(setMessage('No file selected.'));\n    }\n  };\n\n  return (\n    <div className=\"card p-4\" style={{ borderRadius: '15px', backgroundColor: '#f8f9fa' }}>\n      <h4 className=\"text-center mb-3\">File Upload</h4>\n      <div className=\"mb-3\">\n        <input\n          type=\"file\"\n          className=\"form-control\"\n          onChange={handleFileChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,EAAEC,gBAAgB,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IACpC,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAEtC,IAAIF,YAAY,EAAE;MAChBH,QAAQ,CAACN,UAAU,CAAC,SAASS,YAAY,CAACG,IAAI,aAAa,CAAC,CAAC;MAE7D,IAAI;QACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEN,YAAY,CAAC;QAErC,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;UAC3DC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEN;QACR,CAAC,CAAC;QAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClCjB,QAAQ,CAACL,gBAAgB,CAACqB,IAAI,CAACE,aAAa,CAAC,CAAC,CAAC,CAAC;QAChDlB,QAAQ,CAACN,UAAU,CAAC,2CAA2C,CAAC,CAAC;MACnE,CAAC,CAAC,OAAOyB,KAAK,EAAE;QACdnB,QAAQ,CAACN,UAAU,CAAC,UAAUyB,KAAK,CAACC,OAAO,EAAE,CAAC,CAAC;MACjD;IACF,CAAC,MAAM;MACLpB,QAAQ,CAACN,UAAU,CAAC,mBAAmB,CAAC,CAAC;IAC3C;EACF,CAAC;EAED,oBACEG,OAAA;IAAKwB,SAAS,EAAC,UAAU;IAACC,KAAK,EAAE;MAAEC,YAAY,EAAE,MAAM;MAAEC,eAAe,EAAE;IAAU,CAAE;IAAAC,QAAA,gBACpF5B,OAAA;MAAIwB,SAAS,EAAC,kBAAkB;MAAAI,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDhC,OAAA;MAAKwB,SAAS,EAAC,MAAM;MAAAI,QAAA,eACnB5B,OAAA;QACEiC,IAAI,EAAC,MAAM;QACXT,SAAS,EAAC,cAAc;QACxBU,QAAQ,EAAE9B;MAAiB;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA7CID,UAAU;EAAA,QACGL,WAAW;AAAA;AAAAuC,EAAA,GADxBlC,UAAU;AA+ChB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}